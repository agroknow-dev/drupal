<?php
/**
 * @file
 * This module provide an interface to the landbook section of the Landportal.
 *
 * The Landportal landbook
 *
 * Original work by: WESO (http://www.weso.es/)
 * Drupal refactoring: Jules <jules@ker.bz>
 */

require_once(drupal_get_path('module', 'landbook').'/utils/database_helper.php');
require_once(drupal_get_path('module', 'landbook').'/utils/cache_helper.php');

$GLOBALS['landbook_menu'] = 'landbook-menu';
$GLOBALS['landbook_sections'] = array('regions', 'countries', 'catalog', 'indicators', 'sources', 'reuse', 'widgets');

ctools_include('landbook.menu',         'landbook');
ctools_include('landbook.block',        'landbook');

function landbook_help($path, $arg) {
  switch ($path) {
  case "admin/help#landbook":
    return '<p>' . t("Landbook section of the Landportal") . '</p>'
      . '<p>' . t("This come with a (header) Block, customised View(s) and a landbook main-menu item") .'</p>'
      . '<p>' . t("The Landbook is composed of different modules: catalog, countries, indicators, regions, reuse, sources, widgets") . '</p>'
      . '<p>' . t("Each comes with a set of template and JS to allow dynamic actions.") . '</p>'
      ;
    break;
  }
}

function landbook_theme($existing, $type, $theme, $path) {
  $struct = array(
    'variables' => array(
      'data' => NULL,
    ),
    'path' => drupal_get_path('module', 'landbook') . '/theme',
  );
  return array(
    'regions-selectors'         => $struct + array('template' => 'regions--selectors'),
    'country-sidebar-first'     => $struct + array('template' => 'block--country-sidebar-first'),
    'country-sidebar-second'    => $struct + array('template' => 'block--country-sidebar-second'),

    'regions'           => $struct + array('template' => 'regions'),
    'catalog'           => $struct + array('template' => 'catalog'),
    'countries'         => $struct + array('template' => 'countries'),
    'country'           => $struct + array('template' => 'country', 'country' => NULL),
    'datasource'        => $struct + array('template' => 'datasource', 'datasource' => NULL),
    'datasources'       => $struct + array('template' => 'datasources'),
    'indicator'         => $struct + array('template' => 'indicator', 'indicator' => NULL),
    'indicators'        => $struct + array('template' => 'indicators'),
    'reuse'             => $struct + array('template' => 'reuse'),
    'widgets'           => $struct + array('template' => 'widgets'),
  );
}

/**
 * Add elements to landbook pages (like the shared stuff)
 */
function landbook_page_alter(&$page) {
  $breadcrumb = drupal_get_breadcrumb();
  $breadcrumb[0] = l(t('Landbook'), 'book');
  $breadcrumb[] = l(t(drupal_get_title()), '');
  drupal_set_breadcrumb($breadcrumb);
}


/**
 * Fill up sidebar blocks for landbook pages
 * Nasty way to build the block content after page callback
 */
function landbook_page_build(&$page) {
  // If we don't have a 'data' elements in the main content, it is probably
  // not a landbook page.
  if (!isset($page['content']['system_main']['content']['#data'])) return;
  $data = $page['content']['system_main']['content']['#data'];

  //dpm($page['content']['system_main']['content']['#data'], 'system_main data');
  // 
  if (isset($data['entity-id'])) {
    $page['sidebar_first']['landbook_country_sidebar_first']['#markup'] =
      landbook_country_sidebar_first($data);
    $page['sidebar_second']['landbook_country_sidebar_second']['#markup'] =
      landbook_country_sidebar_second($data);
  }
  if (isset($data['selectors']['regions'])) {
    $page['sidebar_second']['landbook_regions_selectors']['#markup'] =
      landbook_regions_selectors($data);
  }
}

function landbook_menu() {
  $items = array();
  landbook_menu_admin($items);
  // Automatically build Landbook menu according to available modules
  landbook_menu_build($items);

  // Landbook main-menu link
  $items['book'] = array(
    'title'		=> 'Landbook',
    'menu_name'		=> 'main-menu',
    'type'              => MENU_NORMAL_ITEM,
    'access callback'	=> TRUE,
    'page callback'	=> 'landbook_regions',
    'page arguments'	=> array(),
    'file'              => 'regions.inc',
    'file path'         => drupal_get_path('module', 'landbook').'/modules'
  );
  $translatables['book'][] = t('Landbook');
  return $items;
}








/**
 * Dirty shit that should be converted to a block
 * this would also mean tweaking the data structure and so on...
 */
function landbook_table_render($data) {
  //if ($data) dpm($data, 'table_render');
  $str = '
<div class="table-responsive">
  <table class="graphs table table-striped">
    <thead>
      <tr>';
  $str .= '        <th class="regionCode">' . t('Country code') . '</th>';
  $str .= '        <th class="regionName">' . t('Country name') . '</th>';
  $str .= '        <th class="indicatorCode">' . t('Indicator code') . '</th>';
  $str .= '        <th class="indicatorName">' . t('Indicator name') . '</th>';
  $str .= '        <th class="value">' . t('Value') . '</th>';
  $str .= '        <th class="time">' . t('Year') . '</th>';
  $str .= '                 </tr>
            </thead>
            <tbody>';
  if (isset($data['observations'])) {
    foreach ($data['observations'] as $o) {
      $str .= '    <tr>';
      $str .= '      <td class="regionCode">' . (isset($o['country']['code']) ? $o['country']['code'] : '') . '</td>';
      $str .= '      <td class="regionName">' . $o['country']['name'] . '</td>';
      $str .= '      <td class="indicatorCode">' . $o['indicator']['id'] . '</td>';
      $str .= '      <td class="indicatorName">' . $o['indicator']['name'] . '</td>';
      $str .= '      <td class="value">' . $o['value']['value'] . '</td>';
      $str .= '      <td class="time">' . $o['ref_time']['value'] . '</td>';
      $str .= '    <tr>';
    }
  }
  $str .= '  </tbody>
</table>
</div>';
      return $str;
}

/**
 * Register JS variables through Drupal system.
 * They are (only?) used by landbook/js/controller/*js files
 */
function landbook_add_js_vars($args=NULL) {
  global $language;
  $path = '/' . drupal_get_path('module', 'landbook');
  $url = '/' . drupal_get_path('theme', 'landportal');
  // Use those variables in javascript with:
  //   var XXX = Drupal.settings.landbook.XXX
  drupal_add_js(array('landbook' => array(
                                          'countryCode' => $args,
    'languageCode'    => $language->language,
    'imagesURL'       => $url . '/images',              // landportal theme related
    'ajaxURL'         => $path . '/ajax',               // landbook module related
    // TODO: Should be configurable through admin/settings/landbook/services,
    //  & have default values in local.settings.php or sum'thing
    'apiURL'          => $GLOBALS['landbook_urls']['api'],
    'ckanURL'         => $GLOBALS['landbook_urls']['ckan'],
    'sparqlURL'       => $GLOBALS['landbook_urls']['sparql'], // not really used?
  )), 'setting'
  );
}

/**
 * Includes specific Landbook Javascripts and CSS
 * This is directly included by the 'page callback' functions (in landbook/modules/*inc)
 * Not all pages require this to work.
 */
function landbook_add_js_css() {
  // Global stuff for the portal, should live in theme (?)
  //drupal_add_js(drupal_get_path('module', 'landbook').'/js/search.js');
  //drupal_add_js(drupal_get_path('module', 'landbook').'/js/ajax.js');
  drupal_add_js(drupal_get_path('module', 'landbook').'/js/libraries/bootstrap.min.js');
  // Some helpers to generate HTML and stuff
  drupal_add_js(drupal_get_path('module', 'landbook').'/js/util.js');
  // Weird shit from WESO students re-inventing the wheel
  //drupal_add_js(drupal_get_path('module', 'landbook').'/js/language.js');

  // Below this, it should be OK (clean)
  drupal_add_js(drupal_get_path('module', 'landbook').'/js/libraries/canvg.js');
  drupal_add_js(drupal_get_path('module', 'landbook').'/js/libraries/rgbcolor.js');
  drupal_add_js(drupal_get_path('module', 'landbook').'/js/libraries/StackBlur.js');
  drupal_add_js(drupal_get_path('module', 'landbook').'/js/libraries/seedrandom.min.js');
  drupal_add_js(drupal_get_path('module', 'landbook').'/js/country_chart_options.js');
  drupal_add_js(drupal_get_path('module', 'landbook').'/js/libraries/wesCountry.min.js');

  // TODO: use separate function to do CSS includes: hook_preprocess_html (?)
  // bootstrap is (should be?) included form theme/landbook (?)
  drupal_add_css(drupal_get_path('theme', 'landportal').'/css/font-awesome.min.css');
  drupal_add_css(drupal_get_path('theme', 'landportal').'/css/bootstrap.min.css');
  drupal_add_css(drupal_get_path('module', 'landbook').'/js/libraries/wesCountry.min.css');
  drupal_add_css(drupal_get_path('theme', 'landportal').'/css/landbook.css');
}
